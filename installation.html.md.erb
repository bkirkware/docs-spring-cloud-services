---
title: Installing Spring Cloud Services for VMware Tanzu
owner: Spring Cloud Services
---

<style>
    .note.warning {
        background-color: #fdd;
        border-color: #fbb
    }

    .note.warning:before {
        color: #f99;
     }
</style>

<strong><%= modified_date %></strong>

Ensure that you have or have completed all items listed in <a href="common/index.html#requirements">Requirements</a>. Then follow the below steps to install Spring Cloud Services.

## <a id="installation-steps"></a>Installation Steps

1. Download Spring Cloud Services from [VMware Tanzu Network](https://network.pivotal.io/).

1. In the Installation Dashboard of Ops Manager, click **Import a Product** on the left sidebar to upload the Spring Cloud Services file.

1. In the left sidebar, under **Spring Cloud Services**, click the <strong>&#43;</strong> button next to the version number.

1. When the **Spring Cloud Services** tile appears in the **Installation Dashboard**, click it. In the **Settings** tab, click **Assign AZs and Networks**.

    <%= image_tag("./images/installation/azs-and-networks.png") %>

    Select the availability zones for the tile to use. In the **Network** section, select the network used by VMware Tanzu Application Service for VMs (TAS). When finished, click **Save**.

1. Return to the Installation Dashboard.

1. Click **Review Pending Changes**. For more information about this Ops Manager page, see [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).

1. Click **Apply Changes** to install the tile.

## <a id="running-alongside-previous-versions"></a>Running Alongside Previous Versions

Spring Cloud Services (SCS) 3.0--3.1 can be installed alongside earlier versions of Spring Cloud Services, including 2.0. SCS v3.1 includes a new Config Server service, which is named `p.config-server` instead of `p-config-server` as in v2.0 and earlier versions, and a new Service Registry service, which is named `p.service-registry` instead of `p-service-registry` as in v2.0 and earlier versions.

Even though you can run different SCS versions in parallel, VMware recommends that you migrate all your service instances to Spring Cloud Services v3.1.x to complete the upgrade. For more information, see [Upgrading Spring Cloud Services for VMware Tanzu](product-upgrades.html).

### <a id="differences"></a> Differences Between v3.0--3.1 Config Server and Earlier Config Server

The `p.config-server` service includes new features (including the CredHub backend) and can run alongside the services included in 2.0 and earlier versions. You may wish to [disable the older `p-config-server` service](https://docs.pivotal.io/pivotalcf/services/access-control.html#disable-access) and allow only the new `p.config-server` Config Server service to be created.

Older Config Server service instances cannot be upgraded to the new `p.config-server` service. Instead, you must recreate `p-config-server` service instances. Most parameters used to create a `p-config-server` service instance with the Cloud Foundry Command Line Interface (cf CLI), using the `cf create-service` command with the `-c` flag, can also be used to create a `p.config-server` service instance. The following parameters are exceptions which can be used with the `p-config-server` service but cannot be used with the `p.config-server` service:

* `encrypt.key`
* `git.repos`
* `composite.git` (see [Composite Backends](./common/config-server/composite-backends.html) for information about how to configure the composite backend in the SCS 3.0--3.1 Config Server)
* `composite.vault` (see [Composite Backends](./common/config-server/composite-backends.html) for information about how to configure the composite backend in the SCS 3.0--3.1 Config Server)

SCS v3.1 service instances are backwards-compatible with version 2.0.1.RELEASE of the SCS client dependencies.
