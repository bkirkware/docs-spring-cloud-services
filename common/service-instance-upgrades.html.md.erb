---
title: Service Instance Upgrades
owner: Spring Cloud Services
---

See the below sections for steps to upgrade an individual Spring Cloud Services service instance after an upgrade of the Spring Cloud Services product.

<p class='note important'><strong>Important</strong>: Before upgrading a Spring Cloud Services service instance, verify that any client apps for the instance are using the current <a href="./client-dependencies.html">client dependencies</a>.</p>

## <a id="config-server-upgrades"></a>Config Server Upgrades

After an upgrade of the Spring Cloud Services product, follow the below steps to upgrade an individual Config Server service instance.

1. Using the `cf rename-service` command, rename the current Config Server service instance. For example, given a service instance named "config-server", you might rename it to "config-server-old".

    <pre class="terminal">
    $ cf rename-service config-server config-server-old
    </pre>

1. Using the `cf create-service` command, create a new instance with the old instance's settings and former name.

    <pre class="terminal">
    $ cf create-service -c '{ "git": { "uri": "https://github.com/spring-cloud-samples/cook-config", "label": "master"  } }' p-config-server standard config-server
    </pre>

1. For each app that has been bound to the service instance, use the `cf rename` command to rename the app. For example, given an app named "cook", you might rename it to "cook-old".

    <pre class="terminal">
    $ cf rename cook cook-old
    </pre>

1. Update client dependencies (see [Client Dependencies](./client-dependencies.html)) in the original app and push it, using a new temporary route, to VMware Tanzu Application Service for VMs. Ensure that the updated original app is bound to the new service instance.

    <pre class="terminal">
    $ cf push -n cook-new cook
    </pre>

1. Verify that the updated original app functions properly, then use the `cf map-route` command to map the original route to the updated original app.

    <pre class="terminal">
    $ cf map-route cook example.com -n cook
    </pre>

1. Delete the old app and service instance, then delete the temporary route on the updated app.

    <pre class="terminal">
    $ cf delete cook-old

    $ cf delete-service config-server-old

    $ cf delete-route example.com -n cook-new
    </pre>
    
## <a id="service-registry-upgrades"></a>Service Registry Upgrades

After an upgrade of the Spring Cloud Services product, you can use the `cf update-service` command to update an individual Service Registry service instance.

Run the `cf update-service` command, supplying the `upgrade` and `force` parameters and setting both to `true`:

<pre class="terminal">
$ cf update-service service-registry -c '{"upgrade": true, "force": true}'
</pre>

For more information about parameters accepted for an update to a Service Registry service instance, see [Updating an Instance](./service-registry/managing-service-instances.html#updating) in the [Service Registry documentation](./service-registry/).

## <a id="circuit-breaker-dashboard-upgrades"></a>Circuit Breaker Dashboard Upgrades

After an upgrade of the Spring Cloud Services product, you can use the `cf update-service` command to update an individual Circuit Breaker Dashboard service instance.

Run the `cf update-service` command, supplying the `upgrade` and `force` parameters and setting both to `true`:

<pre class="terminal">
$ cf update-service circuit-breaker-dashboard -c '{"upgrade": true, "force": true}'
</pre>

For more information about parameters accepted for an update to a Circuit Breaker Dashboard service instance, see [Updating an Instance](./circuit-breaker/managing-service-instances.html#updating) in the [Circuit Breaker Dashboard documentation](./circuit-breaker/).
