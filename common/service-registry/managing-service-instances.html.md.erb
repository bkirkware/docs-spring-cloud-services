---
title: Managing Service Instances
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

See below for information about managing Service Registry service instances using the Cloud Foundry Command Line Interface tool (cf CLI). You can also manage Service Registry service instances using <%= vars.scs_platform_name %> Apps Manager.

## <a id="creating"></a>Creating an Instance

Target the correct org and space:

<pre class="terminal">
$ cf target -o myorg -s development
</pre>

You can view plan details for the Config Server product by running `cf marketplace -s`.

<pre class="terminal">
$ cf marketplace -s p.service-registry
Getting service plan information for service p.service-registry as user...
OK

service plan   description     free or paid
standard       Standard Plan   free
</pre>

Run `cf create-service`, specifying the service, plan name, and instance name. Optionally, you may add the `-c` flag and provide a JSON object that specifies configuration parameters.

General parameters used to configure the Service Registry are listed below.

| Parameter            | Function                                                                                   | Example                          |
|----------------------|--------------------------------------------------------------------------------------------|----------------------------------|
| <code>count</code>   | The number of nodes to provision: 1 by default, more for running in high-availability mode | <code>'{"count": 3}'</code>      |

A Service Registry service instance can also be configured to replicate its registry with peer Service Registry service instances in other PCF foundations, orgs, or spaces. For more information on the configuration parameters used to enable peer replication, see [Enabling Peer Replication](./enabling-peer-replication.html).

To create an instance with the default of a single node, run:

<pre class="terminal">
$ cf create-service p.service-registry standard service-registry
</pre>

To create an instance, specifying that three nodes should be provisioned, run:

<pre class="terminal">
$ cf create-service p.service-registry standard service-registry -c '{"count": 3}'
</pre>

As the command output suggests, you can use the `cf services` or `cf service` commands to check the status of the service instance. When the Service Registry instance is ready to be used, the `cf service` command will give a status of `create succeeded`:

<pre class="terminal">
$ cf service service-registry
Showing info of service service-registry in org myorg / space development as user...

name:            service-registry
service:         p.service-registry
bound apps:
tags:

[...]

Showing status of last operation from service service-registry...

status:    create succeeded
</pre>

<%= vars.scs_creating_instance_discrepancy %>

## <a id="updating"></a>Updating an Instance

You can update settings on a Service Registry service instance using the Cloud Foundry Command Line Interface tool (cf CLI). The `cf update-service` command can be given a `-c` flag with a JSON object containing parameters used to configure the service instance.

To update a Service Registry service instance's settings, target the org and space of the service instance:

<pre class="terminal">
$ cf target -o myorg -s development
</pre>

Then run `cf update-service SERVICE_NAME -c '{ "PARAMETER": "VALUE" }'`, where `SERVICE_NAME` is the name of the service instance, `PARAMETER` is a supported parameter, and `VALUE` is the value for the parameter. For information about supported parameters, see the next section.

### <a id="configuration-parameters"></a>Configuration Parameters

General parameters accepted for the Service Registry are listed below.

| Parameter               | Function                                                                                                                                               | Example                          |
|-------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------|
| <code>count</code>      | The number of nodes to provision                                                                                                                       | <code>'{"count": 3}'</code>      |
| <code>upgrade</code>    | Whether to upgrade the instance                                                                                                                        | <code>'{"upgrade": true}'</code> |
| <code>force</code>      | When `upgrade` is set to `true`, whether to force an upgrade of the instance, even if the instance is already at the latest available service version  | <code>'{"force": true}'</code>   |

A Service Registry service instance can also be configured to replicate its registry with peer Service Registry service instances in other PCF foundations, orgs, or spaces. For more information on the configuration parameters used to enable peer replication, see [Enabling Peer Replication](./enabling-peer-replication.html).

To update a service instance and set the count of nodes for running in high-availability mode, run:

<pre class="terminal">
$ cf update-service service-registry -c '{"count": 3}'
</pre>

As the command output suggests, you can use the `cf services` or `cf service` commands to check the status of the service instance. When the update is complete, the `cf service` command will give a status of `update succeeded`:

<pre class="terminal">
$ cf service service-registry
Showing info of service service-registry in org myorg / space development as user...

name:            service-registry
service:         p.service-registry
bound apps:
tags:

[...]

Showing status of last operation from service service-registry...

status:    update succeeded
</pre>

The service instance is now updated and ready to be used. For information about registering an app with a Service Registry service instance or calling an app which has been registered with a Service Registry service instance, see <a href="./writing-client-applications.html">Writing Client Applications</a>.

## <a id="sharing-a-service-registry"></a>Sharing a Service Registry

A Service Registry service instance or its service registrations can be shared across PCF spaces in either of two situations:

* **Across spaces on same PCF foundation**: Pivotal recommends [using Cloud Foundry service instance sharing](../service-instance-sharing.html) to share a Service Registry service instance across spaces on the same PCF foundation.
* **Across spaces on different PCF foundations**: Pivotal recommends using Service Registry's [peer replication](./enabling-peer-replication.html) feature to share service registrations with a Service Registry service instance in a space on a different PCF foundation.
